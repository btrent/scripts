#!/usr/bin/python

from bs4 import BeautifulSoup
import codecs
import HTMLParser
import json
import os
import re
import subprocess
import sys
import telnetlib
import time
import urllib2

sys.stdout = codecs.getwriter('utf8')(sys.stdout)

# YouTube used to have a great API but Google ruined it, so screen scraping is the easiest method now
def youtube():
    title('YouTube')

    # Also annoying that YouTube has two different types of channels now, for no good reason
    #users = ['Chessexplained', 'GregShahadechess', 'Chyrosran22']
    users = ['Chyrosran22']
    for user in users:
        entrydata = []
        url = urllib2.urlopen("https://www.youtube.com/user/"+user+"/videos?sort=dd&view=0&shelf_id=0")
        content = url.read()
        soup = BeautifulSoup(content, "lxml")
        links = soup.findAll("a", attrs={'dir':'ltr'})

        print_youtube_data(user, links)

    channels = ['UC6EnFbK-P5q0zeaqI5yobKg','UCbY5HhjlHrK25efi1DoFCFQ','UCcYZTGsTO5TbCaA1O0wcBzw','UCZ5A3ZVgj-Uja2mj5lGpZWw', 'UClV9nqHHcsrm2krkFDPPr-g', 'UC6hOVYvNn79Sl1Fc1vx2mYA']

    for channel in channels:
        entrydata = []
        url = urllib2.urlopen("https://www.youtube.com/channel/"+channel+"/videos")
        content = url.read()
        soup = BeautifulSoup(content, "lxml")

        links = soup.findAll("a", attrs={'dir':'ltr'})
        name = links[0].contents[0]

        print_youtube_data(name, links)

def print_youtube_data(name, links):
    parser = HTMLParser.HTMLParser()

    print name

    entrydata = []
    i = 0
    for link in links:
        if (('watch' in link['href']) and (i < 5)):
            entrydata.append([parser.unescape(link.contents[0]), "http://www.youtube.com"+link['href']])
            i = i + 1
            
    pretty_print(entrydata)

def twitch():
    title('Twitch')

    client_id = 'CLIENTIDGOESHERE'
    games = ['The Legend of Zelda: A Link to the Past', 'Chess', 'Donkey Kong', 'Soul Blazer', 'Super Metroid', 'Final Fantasy IV', 'Final Fantasy VI']
    channels = ['dram55','andyperfect','gyre_','igmgatakamsky','darbian','pjdicesare','puwexil','jcarverpoker','zoasty','kottpower','chessnetwork','ptudose']

    for game in games:
        url = 'https://api.twitch.tv/helix/games?name=' + game.replace(' ', '+')
        request = urllib2.Request(url, None, {'Client-ID': client_id})
        response = urllib2.urlopen(request)
        data = json.load(response)
        game_id = data.get("data")[0].get("id")
        
        print game + ':'
        url = 'https://api.twitch.tv/helix/streams?game_id=' + game_id + '&first=24'
        request = urllib2.Request(url, None, {'Client-ID': client_id})
        response = urllib2.urlopen(request)
        data = json.load(response)
        streams = data.get("data", None)
        streamdata = []

        if streams is not None:
            for stream in streams:
                streamdata.append([stream['user_name'], stream['title'], 'https://twitch.tv/'+stream['user_name'], str(stream['viewer_count'])])

        pretty_print(streamdata)

    i = 0
    query_string = ""
    for channel in channels:
        if i > 0:
            query_string = query_string + "&"
        i = 1
        query_string = query_string + "user_login=" + channel
        
    url = 'https://api.twitch.tv/helix/streams?' + query_string
    request = urllib2.Request(url, None, {'Client-ID': client_id})
    response = urllib2.urlopen(request)
    data = json.load(response)
    streams = data.get("data", None)
    streamdata = []

    if streams is not None:
        for stream in streams:
            streamdata.append([stream['user_name'], stream['title'], 'https://twitch.tv/'+stream['user_name'], str(stream['viewer_count'])])

    print '\nFollowed Channels\n'
    pretty_print(streamdata)    

def fics():
    title('FICS')

    tn = telnetlib.Telnet('freechess.org', 5000, 5)
    tn.read_until('login: ', 5)
    tn.write("g\n")
    tn.read_until('Press return', 5)
    tn.write("\n")
    tn.read_until('ROBOadmin', 5)
    tn.write("g /l\n")

    response = tn.read_until('games displayed', 5)

    if (response is None):
        print "FICS returned no data.\n"
        return

    num_games = 0
    games = response.rstrip().split('\n')
    regex = re.compile(r"\s*\d+\s\d+\s.*1\s+0", re.IGNORECASE)

    for game in games:
        if (regex.match(game)):
            print game
            num_games += 1

    if (num_games == 0):
        print "No games currently being played."

def pretty_print(data):
    widths = [max(map(len, col)) for col in zip(*data)]
    for d in data:
#        print "  ".join((val.ljust(width+3) for val, width in zip(d, widths)))
        t = []
        for val, width in zip(d, widths):
            if width > 95:
                val = val[0:95]
                width = 98
            t.append(val.ljust(width+3))
        print "  ".join(t)

    print ''

def title(s):
    height,width = os.popen('stty size', 'r').read().split()
    print '-' * int(width)
    print s
    print ''

def main():
    print 'Welcome to the Internet TV Guide. Options:\n'
    print '1. Twitch'
    print '2. YouTube'
    print '3. FICS'
    print '4. All'
    print ''

    s = raw_input('Enter the number of your selection: ')

    # Python, why don't you support switch statements?
    v = {
        '1': twitch,
        '2': youtube,
        '3': fics,
        '4': all,
    }.get(s, none)

    v()

def all():
    twitch()
    youtube()
    fics()

def none():
    print 'Sorry, that is not a valid option.\n\n'
    main()

if __name__ == "__main__":
    main()





